{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"chat-window\"\n  }, [_c(\"div\", {\n    staticClass: \"top\"\n  }, [_c(\"el-row\", {\n    staticStyle: {\n      height: \"70px\"\n    }\n  }, [_c(\"el-col\", {\n    attrs: {\n      span: _vm.personInfoSpan[0]\n    }\n  }, [_c(\"div\", {\n    staticClass: \"head-pic\"\n  }, [_c(\"HeadPortrait\", {\n    attrs: {\n      imgUrl: _vm.frinedInfo.headImg\n    }\n  })], 1)]), _c(\"el-col\", {\n    attrs: {\n      span: _vm.personInfoSpan[1]\n    }\n  }, [_c(\"div\", {\n    staticClass: \"info-detail\"\n  }, [_c(\"div\", {\n    staticClass: \"name\"\n  }, [_vm._v(_vm._s(_vm.frinedInfo.name))]), _c(\"div\", {\n    staticClass: \"detail\"\n  }, [_vm._v(_vm._s(_vm.frinedInfo.detail))])])]), _c(\"el-col\", {\n    attrs: {\n      span: _vm.personInfoSpan[2]\n    }\n  }, [_c(\"div\", {\n    staticClass: \"other-fun\"\n  }, [_c(\"label\", {\n    attrs: {\n      for: \"docFile\"\n    }\n  }, [_c(\"span\", {\n    staticClass: \"iconfont icon-wenjian\"\n  })]), _c(\"label\", {\n    attrs: {\n      for: \"imgFile\"\n    }\n  }, [_c(\"span\", {\n    staticClass: \"iconfont icon-tupian\"\n  })]), _c(\"input\", {\n    attrs: {\n      type: \"file\",\n      name: \"\",\n      id: \"imgFile\",\n      accept: \"image/*\"\n    },\n    on: {\n      change: _vm.sendImg\n    }\n  }), _c(\"input\", {\n    attrs: {\n      type: \"file\",\n      name: \"\",\n      id: \"docFile\",\n      accept: \"application/*,text/*\"\n    },\n    on: {\n      change: _vm.sendFile\n    }\n  })])])], 1)], 1), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.acqStatus,\n      expression: \"!acqStatus\"\n    }]\n  }, [_c(\"div\", {\n    staticClass: \"line\"\n  })]), _c(\"div\", {\n    staticClass: \"botoom\",\n    staticStyle: {\n      \"background-color\": \"rgb(50, 54, 68)\"\n    }\n  }, [_c(\"div\", {\n    ref: \"chatContent\",\n    staticClass: \"chat-content\",\n    attrs: {\n      id: \"chat-content\"\n    }\n  }, _vm._l(_vm.chatList, function (item) {\n    return _c(\"div\", {\n      key: item.id,\n      staticClass: \"chat-wrapper\"\n    }, [item.uid !== \"jcm\" ? _c(\"div\", {\n      staticClass: \"chat-friend\"\n    }, [item.chatType == 0 ? _c(\"div\", {\n      staticClass: \"chat-text\"\n    }, [_c(\"el-row\", {\n      attrs: {\n        gutter: 20\n      }\n    }, [_c(\"el-col\", {\n      attrs: {\n        span: 2\n      }\n    }, [_c(\"svg\", {\n      staticClass: \"icon\",\n      attrs: {\n        t: \"1679666016648\",\n        viewBox: \"0 0 1024 1024\",\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        \"p-id\": \"6241\",\n        width: \"22\",\n        height: \"22\"\n      },\n      on: {\n        click: function ($event) {\n          return _vm.$copy(item.msg, \"已复制\");\n        }\n      }\n    }, [_c(\"path\", {\n      attrs: {\n        d: \"M661.333333 234.666667A64 64 0 0 1 725.333333 298.666667v597.333333a64 64 0 0 1-64 64h-469.333333A64 64 0 0 1 128 896V298.666667a64 64 0 0 1 64-64z m-21.333333 85.333333H213.333333v554.666667h426.666667v-554.666667z m191.829333-256a64 64 0 0 1 63.744 57.856l0.256 6.144v575.701333a42.666667 42.666667 0 0 1-85.034666 4.992l-0.298667-4.992V149.333333H384a42.666667 42.666667 0 0 1-42.368-37.674666L341.333333 106.666667a42.666667 42.666667 0 0 1 37.674667-42.368L384 64h447.829333z\",\n        fill: \"#909399\",\n        \"p-id\": \"6242\"\n      }\n    })])]), _c(\"el-col\", {\n      attrs: {\n        span: 21\n      }\n    })], 1), _c(\"markdown-it-vue\", {\n      attrs: {\n        content: item.msg.trim()\n      }\n    })], 1) : _vm._e(), item.chatType == 1 ? _c(\"div\", {\n      staticClass: \"chat-img\"\n    }, [item.extend.imgType == 1 ? _c(\"img\", {\n      staticStyle: {\n        width: \"100px\",\n        height: \"100px\"\n      },\n      attrs: {\n        src: item.msg,\n        alt: \"表情\"\n      }\n    }) : _c(\"el-image\", {\n      staticStyle: {\n        \"border-radius\": \"10px\"\n      },\n      attrs: {\n        src: item.msg,\n        \"preview-src-list\": _vm.srcImgList\n      }\n    })], 1) : _vm._e(), item.chatType == 2 ? _c(\"div\", {\n      staticClass: \"chat-img\"\n    }, [_c(\"div\", {\n      staticClass: \"word-file\"\n    }, [_c(\"FileCard\", {\n      attrs: {\n        fileType: item.extend.fileType,\n        file: item.msg\n      }\n    })], 1)]) : _vm._e(), _c(\"div\", {\n      staticClass: \"info-time\"\n    }, [_c(\"img\", {\n      attrs: {\n        src: item.headImg,\n        alt: \"\"\n      }\n    }), _c(\"span\", [_vm._v(_vm._s(item.name))]), _c(\"span\", [_vm._v(_vm._s(item.time))])])]) : _c(\"div\", {\n      staticClass: \"chat-me\"\n    }, [item.chatType == 0 ? _c(\"div\", {\n      staticClass: \"chat-text\"\n    }, [_c(\"span\", {\n      staticStyle: {\n        \"font-size\": \"16px\"\n      }\n    }, [_vm._v(_vm._s(item.msg))])]) : _vm._e(), item.chatType == 1 ? _c(\"div\", {\n      staticClass: \"chat-img\"\n    }, [item.extend.imgType == 1 ? _c(\"img\", {\n      staticStyle: {\n        width: \"100px\",\n        height: \"100px\"\n      },\n      attrs: {\n        src: item.msg,\n        alt: \"表情\"\n      }\n    }) : _c(\"el-image\", {\n      staticStyle: {\n        \"max-width\": \"300px\",\n        \"border-radius\": \"10px\"\n      },\n      attrs: {\n        src: item.msg,\n        \"preview-src-list\": _vm.srcImgList\n      }\n    })], 1) : _vm._e(), item.chatType == 2 ? _c(\"div\", {\n      staticClass: \"chat-img\"\n    }, [_c(\"div\", {\n      staticClass: \"word-file\"\n    }, [_c(\"FileCard\", {\n      attrs: {\n        fileType: item.extend.fileType,\n        file: item.msg\n      }\n    })], 1)]) : _vm._e(), _c(\"div\", {\n      staticClass: \"info-time\"\n    }, [_c(\"span\", [_vm._v(_vm._s(item.name))]), _c(\"span\", [_vm._v(_vm._s(item.time))]), _c(\"img\", {\n      attrs: {\n        src: item.headImg,\n        alt: \"\"\n      }\n    })])])]);\n  }), 0), _c(\"div\", {\n    staticClass: \"chatInputs\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.buttonStatus,\n      expression: \"buttonStatus\"\n    }],\n    staticClass: \"emoji boxinput\",\n    on: {\n      click: _vm.clickEmoji\n    }\n  }, [_c(\"img\", {\n    attrs: {\n      src: require(\"@/assets/img/emoji/smiling-face.png\"),\n      alt: \"\"\n    }\n  })]), _vm.recording ? _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.buttonStatus,\n      expression: \"buttonStatus\"\n    }],\n    staticClass: \"luyin boxinput\",\n    on: {\n      click: _vm.stopRecording\n    }\n  }, [_c(\"i\", {\n    staticClass: \"el-icon-microphone\",\n    staticStyle: {\n      \"margin-top\": \"17%\"\n    }\n  })]) : _vm._e(), !_vm.recording ? _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.buttonStatus,\n      expression: \"buttonStatus\"\n    }],\n    staticClass: \"luyin boxinput\",\n    on: {\n      click: _vm.startRecording\n    }\n  }, [_c(\"i\", {\n    staticClass: \"el-icon-turn-off-microphone\",\n    staticStyle: {\n      \"margin-top\": \"17%\"\n    }\n  })]) : _vm._e(), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.buttonStatus,\n      expression: \"buttonStatus\"\n    }],\n    staticClass: \"emoji-content\"\n  }, [_c(\"Emoji\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showEmoji,\n      expression: \"showEmoji\"\n    }],\n    on: {\n      sendEmoji: _vm.sendEmoji,\n      closeEmoji: _vm.clickEmoji\n    }\n  })], 1), _c(\"el-input\", {\n    ref: \"textInput\",\n    staticClass: \"textarea\",\n    staticStyle: {\n      \"margin-left\": \"2%\",\n      \"margin-top\": \"3px\",\n      \"min-height\": \"51px\",\n      \"max-height\": \"400px\",\n      \"max-width\": \"80%\",\n      \"min-width\": \"45%\",\n      height: \"auto\"\n    },\n    attrs: {\n      type: \"textarea\",\n      id: \"textareaMsg\",\n      autosize: {},\n      maxlength: \"2000\",\n      placeholder: \"在此输入您的提示词~\"\n    },\n    on: {\n      keydown: [function ($event) {\n        if (!$event.type.indexOf(\"key\") && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) return null;\n        $event.stopPropagation();\n      }, function ($event) {\n        if (!$event.type.indexOf(\"key\") && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) return null;\n        if (!$event.shiftKey) return null;\n        $event.preventDefault();\n        return _vm.insertLineBreak.apply(null, arguments);\n      }]\n    },\n    model: {\n      value: _vm.inputMsg,\n      callback: function ($$v) {\n        _vm.inputMsg = $$v;\n      },\n      expression: \"inputMsg\"\n    }\n  }), _c(\"div\", [_c(\"div\", {\n    staticClass: \"send boxinput\",\n    on: {\n      click: _vm.sendText\n    }\n  }, [_c(\"img\", {\n    attrs: {\n      src: require(\"@/assets/img/emoji/rocket.png\"),\n      alt: \"\"\n    }\n  })])])], 1)])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}