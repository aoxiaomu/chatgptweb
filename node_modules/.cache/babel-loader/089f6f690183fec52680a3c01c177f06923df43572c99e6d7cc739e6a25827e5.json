{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport base from './index';\nimport { AI_HEAD_IMG_URL } from '../store/mutation-types';\nimport { generateUUID } from \"@/util/util\";\nlet axios = base.axios;\nlet baseUrl = base.baseUrl;\n\n// 根据name查找元素的索引\nfunction findIndexByName(arr, name) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].name === name || arr[i] === name) {\n      return i;\n    }\n  }\n  return -1; // 没有找到对应的元素\n}\n\nconst desp_model = {\n  \"gpt-3.5-turbo\": \"chatgpt v3.5 所基于的模型\",\n  \"ada\": \"自然语言模型，OpenAI提供的最快，最便宜的模型，但性能也最差，含有ada字眼的模型都是基于ada训练而来\",\n  \"babbage\": \"自然语言模型，性能比ada强，价格比ada贵，规模比ada大，含有babbage字眼的模型都是基于babbage训练而来\",\n  \"curie\": \"自然语言模型，性能优于ada，babbage，价钱也更贵，规模更大，含有curie字眼的模型都是基于curie训练而来\",\n  \"davinci\": \"自然语言模型，在ada，babbage，curie和davinci中性能最优，规模最大，速度最慢，价钱最贵，含有davinci字眼的模型都是基于davinci训练而来，目前chatgpt基于davinci微调而来\",\n  \"whisper-1\": \"强大的语音转换文本的模型\"\n};\nconst other_desps = {\n  \"code\": \"的AI代码处理模型\",\n  \"similarity\": \"的AI文本相似度计算模型\",\n  \"document\": \"的大文档处理模型\",\n  \"text\": \"的文本处理模型\",\n  \"instruct\": \"的人工指令微调模型\",\n  \"if\": \"一个分支\"\n};\nconst desp_keys = Object.keys(desp_model);\nconst other_desp_keys = Object.keys(other_desps);\nfunction produceModelDesc(model) {\n  const idx = findIndexByName(desp_keys, model);\n  if (idx !== -1) {\n    return desp_model[model];\n  } else {\n    let desc = '';\n    for (let i = 0; i < desp_keys.length; i++) {\n      const key = desp_keys[i];\n      if (model.includes(key)) {\n        desc += `基于语言模型${key}`;\n        break;\n      }\n    }\n    for (let i = 0; i < other_desp_keys.length; i++) {\n      const key = other_desp_keys[i];\n      if (model.includes(key)) {\n        desc += other_desps[key];\n        break;\n      }\n    }\n    if (desc == \"\") {\n      desc = model + \"模型\";\n    }\n    return desc;\n  }\n}\n\n// 获取模型列表\nexport const getModels = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/models`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    const modelsObj = [];\n    //获取所有的模型\n    const models = [...new Set(res.data.data.map(model => model.id))].sort();\n    models.forEach(model => {\n      let modelObj = {\n        img: \"\",\n        name: model,\n        detail: produceModelDesc(model),\n        lastMsg: produceModelDesc(model),\n        id: model,\n        headImg: AI_HEAD_IMG_URL,\n        showHeadImg: true\n      };\n      modelsObj.push(modelObj);\n    });\n    // 将gpt-3.5-turbo置顶\n    const idx = findIndexByName(modelsObj, \"gpt-3.5-turbo\");\n    if (idx !== -1) {\n      const element = modelsObj.splice(idx, 1)[0]; // 将idx元素删除\n      modelsObj.unshift(element); // 将idx出的元素至于列表头\n    }\n\n    return modelsObj;\n  });\n};\n\n// 根据提示创建图像\nexport const createImage = (params, token) => {\n  console.log(params);\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/generations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    data: params\n  }).then(res => {\n    return res.data.data;\n  });\n};\n\n// 根据提示词编辑图像\nexport const createImageEdit = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/edits`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data.data;\n  });\n};\n\n// 根据创建图像变体\nexport const createImageVariations = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/variations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data.data;\n  });\n};\n\n// 将音频转换为文字\nexport const createTranscription = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/audio/transcriptions`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 将音频翻译成英语\nexport const createTranslation = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/audio/translations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 创建微调\nexport const createFineTune = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/fine-tunes`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 列出微调\nexport const getFineTunesList = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n    const fineTunesObjs = [];\n    res.data.data.forEach(fineTunes => {\n      let fineTunesObj = {\n        img: \"\",\n        name: fineTunes.fine_tuned_model,\n        detail: \"基于\" + fineTunes.model + \"微调创建的模型\",\n        lastMsg: \"基于\" + fineTunes.model + \"微调创建的模型\",\n        id: fineTunes.fine_tuned_model ? fineTunes.fine_tuned_model : generateUUID(),\n        headImg: AI_HEAD_IMG_URL,\n        showHeadImg: true,\n        createTime: fineTunes.created_at,\n        fineTunesId: fineTunes.id,\n        fineTunesStatus: fineTunes.status\n      };\n      fineTunesObjs.push(fineTunesObj);\n    });\n    return fineTunesObjs.sort((a, b) => b.createTime - a.createTime);\n  });\n};\n\n// 检索微调信息\nexport const retrieveFineTune = (fineTuneId, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 取消微调\nexport const cancelFineTune = (fineTuneId, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId + '/cancel',\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 获取微调事件列表\nexport const getFineTuneEventsList = (fineTuneId, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId + '/events',\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: fineTuneId\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 删除微调模型\nexport const deleteFineTuneModel = (model, token) => {\n  return axios({\n    method: 'delete',\n    baseURL: `${baseUrl}/v1/models/` + model,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n//获取文件列表\nexport const getFilesList = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/files`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n    const fileObjs = [];\n    res.data.data.forEach(file => {\n      let fileObj = {\n        img: \"\",\n        name: file.filename,\n        detail: \"文件ID是:\" + file.id + \",文件大小是:\" + (file.bytes / 1024 / 1024).toFixed(2) + \"MB\",\n        lastMsg: \"文件ID是:\" + file.id + \",文件大小是:\" + (file.bytes / 1024 / 1024).toFixed(2) + \"MB\",\n        id: file.filename,\n        createTime: file.created_at,\n        fileId: file.id\n      };\n      fileObjs.push(fileObj);\n    });\n    return fileObjs.sort((a, b) => b.createTime - a.createTime);\n  });\n};\n\n// 删除文件\nexport const deleteFile = (file, token) => {\n  return axios({\n    method: 'delete',\n    baseURL: `${baseUrl}/v1/files/` + file,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 上传JSONL文件\nexport const uploadFile = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/files`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    console.log(\"文件上传成功\");\n    console.log(res);\n    return res.data;\n  });\n};\n\n// 检索文件\nexport const retrieveFile = (file, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/files/` + file,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 检索文件内容\nexport const retrieveFileContent = (file, token) => {\n\n  // return axios({\n  //   method: 'get',\n  //   baseURL: `${baseUrl}v1/files/`+file+`/content`,\n  //   headers: {\n  //     'Authorization': 'Bearer ' + token\n  //   }\n  // }).then(response => {\n  //   const writer = fs.createWriteStream('./file.txt')\n  //   response.data.pipe(writer)\n  // })\n};\n\n// 检索文件内容\nexport const createEmbeddings = (params, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/embeddings`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    data: params\n  }).then(response => {\n    console.log(response);\n    return response.data;\n  });\n};\n\n// 获取账号余额信息\nexport const getMoneyInfo = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/dashboard/billing/credit_grants`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  });\n};\n\n// 获取聊天信息\nexport const getChatMsg = params => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/friend/chatMsg`,\n    data: params\n  }).then(res => res.data);\n};","map":{"version":3,"names":["base","AI_HEAD_IMG_URL","generateUUID","axios","baseUrl","findIndexByName","arr","name","i","length","desp_model","other_desps","desp_keys","Object","keys","other_desp_keys","produceModelDesc","model","idx","desc","key","includes","getModels","token","method","baseURL","headers","then","res","modelsObj","models","Set","data","map","id","sort","forEach","modelObj","img","detail","lastMsg","headImg","showHeadImg","push","element","splice","unshift","createImage","params","console","log","createImageEdit","formData","createImageVariations","createTranscription","createTranslation","createFineTune","getFineTunesList","fineTunesObjs","fineTunes","fineTunesObj","fine_tuned_model","createTime","created_at","fineTunesId","fineTunesStatus","status","a","b","retrieveFineTune","fineTuneId","cancelFineTune","getFineTuneEventsList","deleteFineTuneModel","getFilesList","fileObjs","file","fileObj","filename","bytes","toFixed","fileId","deleteFile","uploadFile","retrieveFile","retrieveFileContent","createEmbeddings","response","getMoneyInfo","getChatMsg"],"sources":["C:/Users/kuki/Desktop/ChatGPT_JCM-main/src/api/getData.js"],"sourcesContent":["import base from './index'\nimport { AI_HEAD_IMG_URL } from '../store/mutation-types'\nimport { generateUUID } from \"@/util/util\";\n\nlet axios = base.axios\nlet baseUrl = base.baseUrl\n\n// 根据name查找元素的索引\nfunction findIndexByName(arr, name) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].name === name || arr[i] === name) {\n      return i;\n    }\n  }\n  return -1; // 没有找到对应的元素\n}\n\nconst desp_model = {\n  \"gpt-3.5-turbo\": \"chatgpt v3.5 所基于的模型\",\n  \"ada\": \"自然语言模型，OpenAI提供的最快，最便宜的模型，但性能也最差，含有ada字眼的模型都是基于ada训练而来\",\n  \"babbage\": \"自然语言模型，性能比ada强，价格比ada贵，规模比ada大，含有babbage字眼的模型都是基于babbage训练而来\",\n  \"curie\": \"自然语言模型，性能优于ada，babbage，价钱也更贵，规模更大，含有curie字眼的模型都是基于curie训练而来\",\n  \"davinci\": \"自然语言模型，在ada，babbage，curie和davinci中性能最优，规模最大，速度最慢，价钱最贵，含有davinci字眼的模型都是基于davinci训练而来，目前chatgpt基于davinci微调而来\",\n  \"whisper-1\": \"强大的语音转换文本的模型\"\n}\nconst other_desps = {\n  \"code\": \"的AI代码处理模型\",\n  \"similarity\": \"的AI文本相似度计算模型\",\n  \"document\": \"的大文档处理模型\",\n  \"text\": \"的文本处理模型\",\n  \"instruct\": \"的人工指令微调模型\",\n  \"if\": \"一个分支\"\n}\nconst desp_keys = Object.keys(desp_model)\nconst other_desp_keys = Object.keys(other_desps)\n\nfunction produceModelDesc(model) {\n  const idx = findIndexByName(desp_keys, model)\n  if (idx !== -1) {\n    return desp_model[model]\n  }\n  else {\n    let desc = '';\n    for (let i = 0; i < desp_keys.length; i++) {\n      const key = desp_keys[i];\n      if (model.includes(key)) {\n        desc += `基于语言模型${key}`;\n        break;\n      }\n    }\n    for (let i = 0; i < other_desp_keys.length; i++) {\n      const key = other_desp_keys[i];\n      if (model.includes(key)) {\n        desc += other_desps[key];\n        break;\n      }\n    }\n    if (desc == \"\") {\n      desc = model + \"模型\"\n    }\n    return desc\n  }\n}\n\n\n// 获取模型列表\nexport const getModels = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/models`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    const modelsObj = []\n    //获取所有的模型\n    const models = [...new Set(res.data.data.map(model => model.id))].sort();\n    models.forEach(model => {\n      let modelObj = {\n        img: \"\",\n        name: model,\n        detail: produceModelDesc(model),\n        lastMsg: produceModelDesc(model),\n        id: model,\n        headImg: AI_HEAD_IMG_URL,\n        showHeadImg: true\n      }\n      modelsObj.push(modelObj)\n    });\n    // 将gpt-3.5-turbo置顶\n    const idx = findIndexByName(modelsObj, \"gpt-3.5-turbo\")\n    if (idx !== -1) {\n      const element = modelsObj.splice(idx, 1)[0]; // 将idx元素删除\n      modelsObj.unshift(element); // 将idx出的元素至于列表头\n    }\n    return modelsObj;\n  })\n}\n\n// 根据提示创建图像\nexport const createImage = (params, token) => {\n  console.log(params)\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/generations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    data: params\n  }).then(res => {\n    return res.data.data;\n  })\n}\n\n// 根据提示词编辑图像\nexport const createImageEdit = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/edits`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data.data;\n  })\n}\n\n// 根据创建图像变体\nexport const createImageVariations = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/images/variations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data.data;\n  })\n}\n\n// 将音频转换为文字\nexport const createTranscription = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/audio/transcriptions`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 将音频翻译成英语\nexport const createTranslation = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/audio/translations`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 创建微调\nexport const createFineTune = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/fine-tunes`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type':  'application/json'\n    },\n    data: formData\n  }).then(res => {\n    return res.data;\n  })\n}\n\n\n// 列出微调\nexport const getFineTunesList = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(res)\n    const fineTunesObjs = []\n    res.data.data.forEach(fineTunes => {\n      let fineTunesObj = {\n        img: \"\",\n        name: fineTunes.fine_tuned_model,\n        detail: \"基于\"+fineTunes.model+\"微调创建的模型\",\n        lastMsg: \"基于\"+fineTunes.model+\"微调创建的模型\",\n        id: fineTunes.fine_tuned_model?fineTunes.fine_tuned_model:generateUUID(),\n        headImg: AI_HEAD_IMG_URL,\n        showHeadImg: true,\n        createTime: fineTunes.created_at,\n        fineTunesId:fineTunes.id,\n        fineTunesStatus:fineTunes.status\n      }\n      fineTunesObjs.push(fineTunesObj)\n    });\n    return fineTunesObjs.sort((a, b) => b.createTime - a.createTime);\n  })\n}\n\n\n// 检索微调信息\nexport const retrieveFineTune = (fineTuneId, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n\n\n// 取消微调\nexport const cancelFineTune = (fineTuneId, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId + '/cancel',\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 获取微调事件列表\nexport const getFineTuneEventsList = (fineTuneId, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/fine-tunes/` + fineTuneId + '/events',\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: fineTuneId\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 删除微调模型\nexport const deleteFineTuneModel = (model, token) => {\n  return axios({\n    method: 'delete',\n    baseURL: `${baseUrl}/v1/models/` + model,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n\n//获取文件列表\nexport const getFilesList = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/files`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(res)\n    const fileObjs = []\n    res.data.data.forEach(file => {\n      let fileObj = {\n        img: \"\",\n        name: file.filename,\n        detail: \"文件ID是:\"+file.id+\",文件大小是:\"+(file.bytes/1024/1024).toFixed(2)+\"MB\",\n        lastMsg: \"文件ID是:\"+file.id+\",文件大小是:\"+(file.bytes/1024/1024).toFixed(2)+\"MB\",\n        id: file.filename,\n        createTime: file.created_at,\n        fileId:file.id\n      }\n      fileObjs.push(fileObj)\n    });\n    return fileObjs.sort((a, b) => b.createTime - a.createTime);\n  })\n}\n\n// 删除文件\nexport const deleteFile = (file, token) => {\n  return axios({\n    method: 'delete',\n    baseURL: `${baseUrl}/v1/files/` + file,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 上传JSONL文件\nexport const uploadFile = (formData, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/files`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  }).then(res => {\n    console.log(\"文件上传成功\")\n    console.log(res)\n    return res.data;\n  })\n}\n\n\n// 检索文件\nexport const retrieveFile = (file, token) => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/v1/files/` + file,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n// 检索文件内容\nexport const retrieveFileContent = (file, token) => {\n\n  // return axios({\n  //   method: 'get',\n  //   baseURL: `${baseUrl}v1/files/`+file+`/content`,\n  //   headers: {\n  //     'Authorization': 'Bearer ' + token\n  //   }\n  // }).then(response => {\n  //   const writer = fs.createWriteStream('./file.txt')\n  //   response.data.pipe(writer)\n  // })\n}\n\n\n\n// 检索文件内容\nexport const createEmbeddings = (params, token) => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/v1/embeddings`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    data:params\n  }).then(response => {\n    console.log(response)\n    return response.data\n  })\n}\n\n\n// 获取账号余额信息\nexport const getMoneyInfo = token => {\n  return axios({\n    method: 'get',\n    baseURL: `${baseUrl}/dashboard/billing/credit_grants`,\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    return res.data;\n  })\n}\n\n\n// 获取聊天信息\nexport const getChatMsg = params => {\n  return axios({\n    method: 'post',\n    baseURL: `${baseUrl}/friend/chatMsg`,\n    data: params\n  }).then(res => res.data)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}