{"ast":null,"code":"//防抖\nexport function debounce(fn) {\n  console.log(1);\n  let t = null; //只会执行一次\n  debugger;\n  return function () {\n    if (t) {\n      clearTimeout(t);\n    }\n    t = setTimeout(() => {\n      console.log(temp); //可以获取\n      // console.log(arguments[0]) //undefined\n      fn.apply(this, arguments);\n      //在这个回调函数里面的argument是这个回调函数的参数，因为没有参数所以undefined，可以通过外面的函数赋值来进行访问\n      //也可以改变成箭头函数,箭头函数的this是指向定义函数的那一层的，所以访问到的arguments是上一层函数的arguments\n    }, 1000);\n  };\n}\n//节流\nexport function throttle(fn, delay = 200) {\n  let timer = null;\n  console.log(fn);\n  debugger;\n  return function () {\n    if (timer) return;\n    timer = setTimeout(() => {\n      debugger;\n      fn.apply(this, arguments);\n      timer = null;\n    });\n  };\n}\n//下拉动画\nexport function animation(obj, target, fn1) {\n  // console.log(fn1);\n  // fn是一个回调函数，在定时器结束的时候添加\n  // 每次开定时器之前先清除掉定时器\n  clearInterval(obj.timer);\n  obj.timer = setInterval(function () {\n    // 步长计算公式  越来越小\n    // 步长取整\n    var step = (target - obj.scrollTop) / 10;\n    step = step > 0 ? Math.ceil(step) : Math.floor(step);\n    if (obj.scrollTop >= target) {\n      clearInterval(obj.timer);\n      // 如果fn1存在，调用fn\n      if (fn1) {\n        fn1();\n      }\n    } else {\n      // 每30毫秒就将新的值给obj.left\n      obj.scrollTop = obj.scrollTop + step;\n    }\n  }, 10);\n}\n\n//判断文件类型\nexport function judgeFileType(file) {\n  if (file == null || file == \"\") {\n    alert(\"请选择要上传的图片!\");\n    return false;\n  }\n  if (file.lastIndexOf('.') == -1) {\n    //如果不存在\".\"    \n    alert(\"路径不正确!\");\n    return false;\n  }\n  var AllImgExt = \".jpg|.jpeg|.gif|.bmp|.png|\";\n  var extName = file.substring(file.lastIndexOf(\".\")).toLowerCase(); //（把路径中的所有字母全部转换为小写）          \n  if (AllImgExt.indexOf(extName + \"|\") == -1) {\n    ErrMsg = \"该文件类型不允许上传。请上传 \" + AllImgExt + \" 类型的文件，当前文件类型为\" + extName;\n    alert(ErrMsg);\n    return false;\n  }\n}\n\n//文件类型\nexport function fileType() {\n  return {\n    'application/msword': 'word',\n    'application/pdf': 'pdf',\n    'application/vnd.ms-powerpoint': 'ppt',\n    'application/vnd.ms-excel': 'excel',\n    'aplication/zip': 'zpi'\n  };\n}\n\n/**\n* 获取当前时间\n*/\nexport function getNowTime() {\n  // 创建一个Date对象\n  var date = new Date();\n  // 获取年份、月份、日期、小时、分钟和秒数\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1; // 注意月份从0开始计数\n  var day = date.getDate();\n  var hour = date.getHours();\n  var minute = date.getMinutes();\n  var second = date.getSeconds();\n  // 如果月份、日期、小时、分钟或秒数小于10，需要在前面补0\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n  if (hour < 10) {\n    hour = \"0\" + hour;\n  }\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n  if (second < 10) {\n    second = \"0\" + second;\n  }\n  // 拼接成字符串\n  var currentTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\n  // 输出结果\n  return currentTime;\n}\n\n/**\n * 格式化时间\n */\nexport function JCMFormatDate(dateStr) {\n  let date = new Date(dateStr);\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  return `${year}/${month}/${day} ${hour}:${minute}:${second}`;\n}\n\n//将时间戳转换为正常时间\nexport function JCMFormatTimestamp(timestamp) {\n  const date = new Date(timestamp * 1000); // 转换为Date对象\n  const options = {\n    // 背景时间的格式选项\n    year: 'numeric',\n    // 年份（4位数字）\n    month: 'long',\n    // 月份的全称\n    day: 'numeric',\n    // 天（数字）\n    hour: 'numeric',\n    // 小时（数字）\n    minute: 'numeric',\n    // 分钟（数字）\n    second: 'numeric' // 秒钟（数字）\n  };\n\n  return date.toLocaleDateString('zh-CN', options);\n}\n/**\n * 复制到剪切板\n */\n\nexport function copyToClipboard(content) {\n  const clipboardData = window.clipboardData;\n  if (clipboardData) {\n    clipboardData.clearData();\n    clipboardData.setData('Text', content);\n    return true;\n  } else if (document.execCommand) {\n    const el = document.createElement('textarea');\n    el.value = content;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    return true;\n  }\n  return false;\n}\n\n/**\n * 生成UUID\n * @returns \n */\nexport function generateUUID() {\n  var d = new Date().getTime();\n  if (window.performance && typeof window.performance.now === \"function\") {\n    d += performance.now(); //use high-precision timer if available\n  }\n\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}